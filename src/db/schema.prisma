// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Users {
  id        String     @id @default(uuid())
  email     String     @unique
  username  String?
  role      Role       @default(USER)
  invoices  Invoices[]
  profile   Profile?
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Activity  Activity[]
}

model Invoices {
  id             String     @id @default(uuid())
  invoiceNumber  Int        @default(autoincrement())
  status         Status     @default(QUOTE)
  author         Users      @relation(fields: [authorId], references: [id])
  authorId       String
  client         Clients    @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId       String
  items          Services[]
  terms          String?
  paymentDetails String?
  dueDate        DateTime?
  currency       Currency   @default(UGX)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  Addons         Addons[]
}

model Addons {
  id         String    @id @default(uuid())
  name       String
  type       AddOnType
  amount     Int
  invoice    Invoices  @relation(fields: [invoicesId], references: [id], onDelete: Cascade)
  invoicesId String
}

model Profile {
  id        String   @id @default(uuid())
  bio       String
  user      Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Clients {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String
  address   String
  tel       String
  invoices  Invoices[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Services {
  id          String   @id @default(uuid())
  name        String
  description String?
  quantity    Int
  unit_cost   Int
  invoice     Invoices @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  invoiceId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Activity {
  id        String   @id @default(uuid())
  activity  String
  ref       String?
  Users     Users    @relation(fields: [usersId], references: [id])
  usersId   String
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

enum Status {
  QUOTE
  PENDING
  PAID
  OVERDUE
  ON_HOLD
}

enum AddOnType {
  TAX
  DISCOUNT
  SHIPPING
}

enum Currency {
  UGX
  USD
  KSX
  GBP
  EUR
  RMB
  RWF
}
